name: Build Android APK
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          zip \
          openjdk-11-jdk \
          python3-pip \
          python3-setuptools \
          python3-dev \
          libffi-dev \
          libssl-dev
        
    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        pip install cython
        
    - name: Fix Android SDK Setup
      run: |
        # Remove problematic SDK if exists
        rm -rf ~/.buildozer/android/platform/android-sdk || true
        
        # Create SDK directory
        mkdir -p ~/.buildozer/android/platform/android-sdk
        cd ~/.buildozer/android/platform/android-sdk
        
        # Download command line tools
        echo "Downloading Android command line tools..."
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        rm commandlinetools-linux-9477386_latest.zip
        
        # Fix directory structure
        echo "Setting up directory structure..."
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ || true
        
        # Create compatibility symlinks for buildozer
        mkdir -p tools/bin
        ln -sf ../../cmdline-tools/latest/bin/sdkmanager tools/bin/sdkmanager
        ln -sf ../../cmdline-tools/latest/bin/avdmanager tools/bin/avdmanager
        
        # Set environment variables
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        
        # Accept all SDK licenses
        echo "Accepting Android SDK licenses..."
        yes | ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null 2>&1 || true
        
        # Install essential SDK packages
        echo "Installing essential SDK packages..."
        ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" || true
        
        echo "Android SDK setup completed successfully!"
        
    - name: Build APK
      run: |
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
        echo "Starting APK build..."
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: pos-system-apk
        path: bin/*.apk
        
    - name: List built files (for debugging)
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ || echo "No bin directory found"
        echo "Looking for APK files:"
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
