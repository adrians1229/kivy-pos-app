name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache buildozer directory
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          zip \
          openjdk-11-jdk \
          python3-pip \
          python3-setuptools \
          python3-dev \
          python3-venv \
          libffi-dev \
          libssl-dev \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libltdl-dev \
          autotools-dev \
          autoconf \
          libtool \
          pkg-config
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install buildozer cython
        
    - name: Setup Android SDK and NDK
      run: |
        # Set environment variables
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export ANDROID_NDK_HOME=~/.buildozer/android/platform/android-ndk-r25b
        
        # Create directories
        mkdir -p ~/.buildozer/android/platform
        cd ~/.buildozer/android/platform
        
        # Clean up any existing installations
        rm -rf android-sdk android-ndk-r25b || true
        
        # Download and setup Android SDK Command Line Tools
        echo "üì± Setting up Android SDK..."
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        rm commandlinetools-linux-9477386_latest.zip
        
        # Create proper SDK structure
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        
        # Create tools symlinks for buildozer compatibility
        mkdir -p android-sdk/tools/bin
        ln -sf ../../cmdline-tools/latest/bin/sdkmanager android-sdk/tools/bin/sdkmanager
        ln -sf ../../cmdline-tools/latest/bin/avdmanager android-sdk/tools/bin/avdmanager
        
        # Update PATH and environment
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
        
        # Accept SDK licenses
        echo "üìù Accepting Android SDK licenses..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null 2>&1 || true
        
        # Install required SDK components
        echo "üì¶ Installing SDK components..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-30" \
          "build-tools;30.0.3" \
          "ndk;25.2.9519653" || true
        
        # Download and setup Android NDK r25b (if not installed via sdkmanager)
        if [ ! -d "$ANDROID_NDK_HOME" ]; then
          echo "üì± Setting up Android NDK r25b..."
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          rm android-ndk-r25b-linux.zip
        fi
        
        echo "‚úÖ Android SDK and NDK setup completed!"
        
    - name: Validate buildozer.spec
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "‚ùå buildozer.spec file not found!"
          exit 1
        fi
        echo "‚úÖ buildozer.spec found"
        
        # Check for main.py
        if [ ! -f main.py ]; then
          echo "‚ùå main.py file not found!"
          exit 1
        fi
        echo "‚úÖ main.py found"
        
    - name: Build APK
      run: |
        export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
        export ANDROID_NDK_HOME=~/.buildozer/android/platform/android-ndk-r25b
        export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
        export JAVA_HOME=/usr/lib/jvm/temurin-11-jdk-amd64
        
        echo "üèóÔ∏è Starting APK build..."
        echo "Using ANDROID_HOME: $ANDROID_HOME"
        echo "Using ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        echo "Using JAVA_HOME: $JAVA_HOME"
        
        # Initialize buildozer (this will create necessary files)
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: pos-system-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          .buildozer/android/platform/build-*/
          .buildozer/android/logs/
        retention-days: 7
        
    - name: Debug information
      if: always()
      run: |
        echo "üìä Build Debug Information:"
        echo "=========================="
        
        echo "üìÅ Directory structure:"
        ls -la
        
        echo ""
        echo "üì¶ Bin directory contents:"
        ls -la bin/ 2>/dev/null || echo "No bin directory found"
        
        echo ""
        echo "üîç Searching for APK files:"
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
        
        echo ""
        echo "üèóÔ∏è Buildozer directory structure:"
        ls -la .buildozer/ 2>/dev/null || echo "No .buildozer directory found"
        
        echo ""
        echo "üì± Android SDK info:"
        ls -la ~/.buildozer/android/platform/ 2>/dev/null || echo "No Android platform directory found"
        
        echo ""
        echo "üåç Environment variables:"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "PATH: $PATH"
